; ModuleID = 'test2.fcc'
source_filename = "test2.fcc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@ptx = private constant [771 x i8] c"//\0A// Generated by LLVM NVPTX Back-End\0A//\0A\0A.version 5.0\0A.target sm_60\0A.address_size 64\0A\0A\09// .globl\09run0\0A\0A.visible .entry run0(\0A\09.param .u64 run0_param_0,\0A\09.param .u64 run0_param_1,\0A\09.param .u64 run0_param_2,\0A\09.param .u64 run0_param_3\0A)\0A{\0A\09.reg .pred \09%p<2>;\0A\09.reg .b32 \09%r<8>;\0A\09.reg .b64 \09%rd<7>;\0A\0A\09ld.param.u64 \09%rd3, [run0_param_0];\0A\09mov.u32 \09%r1, %tid.x;\0A\09mov.u32 \09%r2, %ctaid.x;\0A\09mov.u32 \09%r3, %ntid.x;\0A\09mad.lo.s32 \09%r4, %r2, %r3, %r1;\0A\09cvt.u64.u32 \09%rd2, %r4;\0A\09setp.lt.u64 \09%p1, %rd2, %rd3;\0A\09@%p1 bra \09LBB0_2;\0A\09ret;\0ALBB0_2:\0A\09ld.param.u64 \09%rd4, [run0_param_3];\0A\09cvta.to.global.u64 \09%rd1, %rd4;\0A\09cvt.u32.u64 \09%r5, %rd2;\0A\09shl.b64 \09%rd5, %rd2, 2;\0A\09add.s64 \09%rd6, %rd1, %rd5;\0A\09ld.global.u32 \09%r6, [%rd6];\0A\09add.s32 \09%r7, %r6, %r5;\0A\09st.global.u32 \09[%rd6], %r7;\0A\09ret;\0A}\0A\0A\0A\00"
@field.name = private constant [5 x i8] c"call\00"

; Function Attrs: norecurse uwtable
define i32 @main(i32 %argc, i8** nocapture readnone %argv) local_unnamed_addr #0 {
entry:
  %syncreg = tail call token @llvm.syncregion.start()
  %call = tail call i8* @_Znam(i64 400000000) #3
  %0 = bitcast i8* %call to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull %call, i8 0, i64 400000000, i32 4, i1 false)
  br label %host.block

pfor.end.continue:                                ; preds = %host.block
  ret i32 0

host.block:                                       ; preds = %entry
  call void @__kitsune_cuda_init()
  call void @__kitsune_gpu_init_kernel(i32 0, i8* getelementptr inbounds ([771 x i8], [771 x i8]* @ptx, i32 0, i32 0))
  %1 = bitcast i32* %0 to i8*
  call void @__kitsune_gpu_init_field(i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @field.name, i32 0, i32 0), i8* %1, i32 4, i64 100000000, i8 3)
  call void @__kitsune_gpu_set_run_size(i32 0, i64 100000000, i64 0, i64 0)
  call void @__kitsune_gpu_run_kernel(i32 0)
  call void @__kitsune_gpu_finish()
  br label %pfor.end.continue
}

; Function Attrs: nobuiltin
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare token @llvm.syncregion.start() #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #2

declare void @__kitsune_cuda_init()

declare void @__kitsune_gpu_init_kernel(i32, i8*)

declare void @__kitsune_gpu_init_field(i32, i8*, i8*, i32, i64, i8)

declare void @__kitsune_gpu_set_run_size(i32, i64, i64, i64)

declare void @__kitsune_gpu_run_kernel(i32)

declare void @__kitsune_gpu_finish()

attributes #0 = { norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { builtin }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"Los Alamos National Laboratory clang version 5.0.0  (based on LLVM 5.0.0git-15970c3f598)"}
